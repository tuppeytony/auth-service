version: '3'

services:

  auth-db-demo:
    image: postgres:13
    restart: always
    env_file:
      - ./demo-db.env
    volumes:
      - ../../db_schema.sql:/docker-entrypoint-initdb.d/db_schema.sql
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 10s
      retries: 5

  auth-sevice-demo:
    build:
      context: ../../
      dockerfile: ./ci/demo/Dockerfile
    restart: always
    env_file:
      - ./demo.env
    volumes:
      - ../../src:/opt/app
    healthcheck:
      test: curl --fail http://auth-sevice-demo:8000/healthcheck || exit 1
      interval: 10s
      timeout: 10s
      retries: 5
    depends_on:
      auth-db-demo:
        condition: service_healthy
      auth-redis:
        condition: service_healthy

  nginx-demo:
    image: nginx:latest
    env_file:
      - ./nginx-demo.env
    volumes:
      - ../../nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../../nginx/conf.d:/etc/nginx/conf.d:ro
    ports:
      - "80:80"
    depends_on:
      auth-db-demo:
        condition: service_healthy
      auth-sevice-demo:
        condition: service_healthy
      auth-redis:
        condition: service_healthy

  auth-redis:
    container_name: "auth-redis"
    image: redis/redis-stack-server:latest
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 10s
      retries: 5
